
<div class="vertical-tabs-container">
  <div class="vertical-tabs">
    <a href="javascript:void(0)" class="js-vertical-tab vertical-tab is-active" rel="tab1">Sam Metevia</a>
    <a href="javascript:void(0)" class="js-vertical-tab vertical-tab" rel="tab2">Jacob Hersha</a>
    <a href="javascript:void(0)" class="js-vertical-tab vertical-tab" rel="tab3">Joshua Folks</a>
    <a href="javascript:void(0)" class="js-vertical-tab vertical-tab" rel="tab4">Joshua Please Tell Me Your Last Name</a>
    <a href="javascript:void(0)" class="js-vertical-tab vertical-tab" rel="tab3">Michael Wright</a>
  </div>

  <div class="vertical-tab-content-container">
    <a href="" class="js-vertical-tab-accordion-heading vertical-tab-accordion-heading is-active" rel="tab1">Sam Metevia</a>
    <div id="tab1" class="js-vertical-tab-content vertical-tab-content">
      <h3>"The aim with the piano task was simple perfection; nothing less...</h3> <h3> Semicolons are fancy."</h3>
      </br>
      </br>
      <p>The piano plays notes that are sampled from a real life piano. It knows how to play the notes based on a score file that is written in the following format.</p> 

      </br>
      <h5>Piano Score format:</h5>
      <p>
      < note measure="1" beat="1" duration="8" note="PedalD" dynamic ="1.0"/></br>
      </br>
      "All notes come after <instrument instrument="Piano"> and then indented.
      </p>

      <p>Notes are in format e.g. B6# would be B#, 6th octave. The notes need to be in the correct order so that the program can select the proper file and waveform to play. 
      </p>

      <p>
      Duration is in beats. Measures and beats work as in Step 5. 
      If the note is a Pedal, like the pedal is pressed up or down. The state of the pedal effects how the other notes decay over time. With the pedal up, the notes decay fairly quickly. With the pedal down, their sound is held until a quick release happens at the end of their duration. 
      The dynamic is on a scale of 0 to 1.0 exclusively. 0 is a purely "soft" note, while 1.0 is a purely "loud" one. Intermediate values play a mixture of the two. For example, a value of 0.4 would be 40% loud and 60% soft. This is an attempt to provide advanced dynamics, as the load and soft notes have slightly different sounds, as in a real piano. 
      </p>

      <p>
      At the start of a program, the piano reads the notes that it needs to play. During playtime, if a piano instrument is to play at a given beat, the program uses a Piano Factory object to play the note. A Piano Factory makes a new Piano object and sets the note. The note is set based on the score format listed above. When it is set, the proper waveform is loaded from a table. If the note is not found, the appropriate file is opened and the first couple seconds are loaded into wave. That wave is stored in a map associated with that note. The Piano object controls the duration of the note. It uses the Piano Node class to generate while a note is still ongoing. 
      </p>

      <p>
      A Piano Node class is used to implement effects. A default attack and decay are set. If the pedal is down, the decay is reversed and a new decay is implemented. The pedal object is set in the Piano Factory whenever a Pedal note is played, indicating that the pedal has been pressed or released. Once the Piano classes generate a sound, it is added to the overall sound created by the synthesizer."
      </p>
      </br>
      <p>Well said, Sam.</p>
    </div>

    <a href="" class="js-vertical-tab-accordion-heading vertical-tab-accordion-heading" rel="tab2">Jacob Hersha</a>
    <div id="tab2" class="js-vertical-tab-content vertical-tab-content">
      <h3 class="bigquote">"I was able to create every affect for the Organ instrument."</h3> 

      </br>

      <p>"The hardest part was the Leslie speaker since it's a complicated instrument. 
      At first I tried to just create one class to implement all aspects of the organ.
      This was difficult and it was very hard to understand how I would change some Leslie effects.  
      Noting this, I followed the tutorial that came with the project.  Creating an envelope class
      like the OddSines class was very straightforward, as a lot of this was also
      done in Step 5.</p>  


      <p>After following the tutorial and creating an instrument, instrument factory,
      and wave class all that was left to do was figure out equations and
      algorithms for my instrument.  The tutorial made changing attributes
      and passing sound very easy.  I would say the easiest aspect was the envelope
      generation and the drawbar attributes. The drawbar was simple math that was
      just created using the decibel equation. The amplitudes of the drawbars
      would then be applied to the harmonics for the note.</p> 

      <p>Much of the work was done in the wave class.  Vibrato was fairly straightforward.
      All I did was generate a sine wave that was made by the vibrato phase difference that
      was caused by the magntiude of the vibrato for a note.</p>

      <p>For the Leslie effets, quite a bit amount of thought had to be put in. I conquered
      creating these effects by simply making an attribute for every effect of the speaker.
      I had to make "if" statements that would affect the phase of the Leslie. These
      statements would be determined by using the time of the program and seeing
      where the attack or release points of the Leslie were.  The phase would
      then be put into a sample frame that would replace the original frames.  This sample
      frame will have the new amplitude from the drawbar with the new phase that has 
      the vibrato and Leslie effects included.</p>

      <p>In my envelope class, I just used "if" statements to calculate attack, release, and decay
      equations.  These equations just take into effect the entered attack, decay, or release
      numbers and adjust the gain then the frame is assigned that gain."</p>
      </br>
      </br>
      <p>Keep up the great work, Jacob. You da real MVP.</p>
    </div>

    <a href="" class="js-vertical-tab-accordion-heading vertical-tab-accordion-heading" rel="tab3">Joshua Folks</a>
    <div id="tab3" class="js-vertical-tab-content vertical-tab-content">
      <p>Not much yet.</p>
    </div>

    <a href="" class="js-vertical-tab-accordion-heading vertical-tab-accordion-heading" rel="tab4">Joshua Please Tell Me Your Last Name</a>
    <div id="tab4" class="js-vertical-tab-content vertical-tab-content">
      <p>Sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Phasellus dui urna, mollis vel suscipit in, pharetra at ligula. Pellentesque a est vel est fermentum pellentesque sed sit amet dolor. Nunc in dapibus nibh. Aliquam erat volutpat. Phasellus vel dui sed nibh iaculis convallis id sit amet urna. Proin nec tellus quis justo consequat accumsan. Vivamus turpis enim, auctor eget placerat eget, aliquam ut sapien.</p>
    </div>
  </div>
</div>

<br>

<%= link_to 'New Member', new_member_path %>
